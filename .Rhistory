facet_wrap(~year, scales = "free") +
labs(title = "Mortes por 100 mil habitantes, por país e renda",
subtitle = "Tuberculose",
x = "Mortes por 100 mil habitantes",
y = "",
fill = "Renda") +
scale_fill_npg()
gapminder_mortes %>%
filter(year <= 2007) %>%
filter(death_disease == "Tuberculosis") %>%
ggplot() +
aes(x = gdpPercap,
y = death_rate_100thousand_age_standardized) +
geom_point(shape = "circle",
aes(colour = income,
size = pop),
alpha = 0.2) +
scale_x_continuous(trans = "log10",
labels = scales::unit_format(unit = "k",
scale = 1e-3)) +
geom_smooth(method = "lm",
color = "black",
se = F) +
stat_correlation(method = "pearson",
size = 2.5,
mapping = use_label(c("R", "R2", "n"))) +
facet_wrap(~year, scales = "free") +
theme_minimal() +
labs(title = "PIB per capita e Mortes por doenças imunopreveníveis",
subtitle = "Tuberculose",
x = "PIB per capita",
y = "Mortes por 100 mil habitantes",
color = "Renda",
shape = "População") +
scale_color_npg()
linha = data_2 %>%
ggplot() +
#Mapping
aes(x = peso,
y = imc,
color = imc) +
#Geometrias
geom_line(size = 2) +
geom_point(size = 4) +
#Títulos
labs(x = "Peso (kg)",
y = "IMC",
title = "Índice de massa corporal versus peso",
color = "IMC") +
#Modificando o tema
theme(axis.text.x = element_text(size = 10,
color = "black"),
axis.text.y = element_text(size = 10,
color = "black"),
plot.title = element_text(size = 12,
color = "black",
hjust = 0.5,
face = "bold"))  +
#Gradiente de cores
scale_color_gradient(low = "red",
high = "blue",
na.value = NA)
linha
linha %>%
ggplotly()
#Visualizar
boxplot_years
#Boxplot simples por ano
boxplot_years = cobertura_vacinal %>%
filter(type == "country",
vaccine == "MCV1",
year %in% c(1990, 2000, 2010, 2019)) %>%
ggplot() +
aes(x = "",
y = coverage,
fill = continent) +
geom_boxplot() +
scale_fill_brewer(palette = "Set2", direction = 1) +
theme_bw() +
theme(axis.text.x = element_text(angle = 45,
vjust = 1,
hjust = 1),
plot.margin = unit(c(1, 1, 1, 1), "cm"),
legend.position = "right") +
facet_wrap(vars(year), ncol = 4) +
labs(title = "Cobertura vacinal contra o sarampo",
subtitle = "Primeira dose (MCV1)",
x = "Continente",
y = "Cobertura vacinal (%)",
fill = "Continente") +
scale_fill_npg()
#Visualizar
boxplot_years
#Gráfico de barras simples
paises_barras_mortes = paises_mortes %>% #Dataframe
filter(death_disease == "Measles") %>%
mutate(name = fct_reorder(name, cumulativo)) %>%
slice_max(order_by = cumulativo, n = 10) %>%
ggplot() + #Chamando a função. Aqui se usa "+" em vez de "%>%"
#Mapeando os eixos
aes(x = cumulativo,
y = name,
fill = continent) +
#Geometrias
geom_col() +
geom_label(aes(x = cumulativo,
y = name,
label = cumulativo),
hjust = -0.2) +
#Tema
theme_light() +
#Labels
labs(title = "Mortes cumulativas por Sarampo, de 2000 a 2023",
x = "Mortes",
y = "Países") +
scale_fill_npg() +
#Eixo x
xlim(0, 10000) #Aumentar limites
paises_barras_mortes
paises_mortes
paises_anotados
#Gráfico de barras simples
paises_barras_mortes = paises_mortes %>% #Dataframe
inner_join(paises_anotados %>% select(-region_complete), by = "name") %>%
filter(death_disease == "Measles") %>%
mutate(name = fct_reorder(name, cumulativo)) %>%
slice_max(order_by = cumulativo, n = 10) %>%
ggplot() + #Chamando a função. Aqui se usa "+" em vez de "%>%"
#Mapeando os eixos
aes(x = cumulativo,
y = name,
fill = continent) +
#Geometrias
geom_col() +
geom_label(aes(x = cumulativo,
y = name,
label = cumulativo),
hjust = -0.2) +
#Tema
theme_light() +
#Labels
labs(title = "Mortes cumulativas por Sarampo, de 2000 a 2023",
x = "Mortes",
y = "Países") +
scale_fill_npg() +
#Eixo x
xlim(0, 10000) #Aumentar limites
paises_barras_mortes
#Gráfico de pontos simples
barras_mortes = continentes_mortes %>% #Dataframe
filter(death_disease == "Measles") %>%
mutate(cobertura_vacinal = fct_reorder(continent, cumulativo)) %>%
ggplot() + #Chamando a função. Aqui se usa "+" em vez de "%>%"
#Mapeando os eixos
aes(x = cumulativo,
y = cobertura_vacinal,
fill = cobertura_vacinal) +
#Geometrias
geom_col() +
geom_label(aes(x = cumulativo,
y = cobertura_vacinal,
label = cumulativo),
hjust = -0.2) +
#Tema
theme_light() +
#Labels
labs(title = "Mortes cumulativas por Sarampo, de 2000 a 2023",
x = "Mortes",
y = "Continentes") +
scale_fill_npg()+
#Eixo x
xlim(0, 10000) #Aumentar limites
barras_mortes
#Gráfico de barras simples
continente_barras_vac = continentes_vac %>% #Dataframe
filter(vaccine %in% "MCV1") %>%
mutate(continent = fct_reorder(continent, median)) %>%
ggplot() + #Chamando a função. Aqui se usa "+" em vez de "%>%"
#Mapeando os eixos
aes(x = median,
y = continent,
fill = continent) +
#Geometrias
geom_col() +
geom_text(aes(x = median,
y = continent,
label = median),
hjust = -0.5) +
#Tema
theme_light() +
#Labels
labs(title = "Cobertura vacinal",
x = "Mediana (Cobertura vacinal %)",
y = "Continentes",
fill = "Continente")  +
#Limites
xlim(0, 105) +
scale_fill_npg()
continente_barras_vac
#Gráfico de pontos simples
continentes_pontos_vac = continentes_vac %>% #Dataframe
filter(vaccine %in% "MCV1") %>%
mutate(continent = fct_reorder(continent, median)) %>%
#Chamando a função. Aqui se usa "+" em vez de "%>%"
ggplot() +
#Mapeando os eixos
aes(x = median,
y = continent,
color = continent) +
#Geometrias
geom_point() +
#Labels nos pontos
geom_label(aes(x = median,
y = continent,
label = median)) +
#Tema
theme_light() +
#Títulos
labs(title = "Cobertura vacinal",
x = "Mediana (Cobertura vacinal %)",
y = "Continentes")  +
scale_fill_npg()
continentes_pontos_vac
#Gráfico de pontos simples
continentes_pontos_vac = continentes_vac %>% #Dataframe
filter(vaccine %in% "MCV1") %>%
mutate(continent = fct_reorder(continent, median)) %>%
#Chamando a função. Aqui se usa "+" em vez de "%>%"
ggplot() +
#Mapeando os eixos
aes(x = median,
y = continent,
color = continent) +
#Geometrias
geom_point() +
#Labels nos pontos
geom_label(aes(x = median,
y = continent,
label = median)) +
#Tema
theme_light() +
#Títulos
labs(title = "Cobertura vacinal",
x = "Mediana (Cobertura vacinal %)",
y = "Continentes")  +
scale_color_npg()
continentes_pontos_vac
paises_anotados <- readRDS("~/Desktop/cursor/raw-data/paises_anotados.rds")
#Tabela de países
paises_anotados <- readRDS(here("raw-data", "paises_anotados.rds"))
library(here)
#Tabela de países
paises_anotados <- readRDS(here("raw-data", "paises_anotados.rds"))
paises_anotados
#Tabela de mortes por doença
mortes_doencas <- read_rds("Deaths_infectious_diseases_filtered.rds")
gapminder_mortes %>%
mutate(year = as.integer(year)) %>%
ggplot() +
aes(gdpPercap, death_rate_100thousand_age_standardized, size = pop, colour = country) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_size(range = c(5, 5)) +
scale_x_continuous(trans = "log10",
labels = scales::unit_format(unit = "k",
scale = 1e-3)) +
theme_few() +
scale_colour_manual(values = country_colors) +
facet_wrap(~continent) +
# Animação
labs(title = "Mortes por tuberculose",
subtitle = 'Ano: {frame_time}',
x = 'PIB per capita',
y = 'Mortes por 100 mil habitantes') +
transition_time(year) +
ease_aes('linear')
# Chamando os pacotes da biblioteca
library(tidyverse) #Metapacote
library(skimr) #Diagnóstico de tabela
library(janitor) #Limpeza de tabelas
library(esquisse) #Plotagem de gráficos prática
library(ggthemes) #Temas de ggplot
library(plotly) #Gráficos interativos
library(patchwork) #Unir gráficos
library(gghighlight) #Marcar pontos e linhas
library(ggsci) #Paleta de cores
library(gapminder) #Dataset sobre população, PIB e expectativa de vida dos países
library(ggpmisc)
library(scales)
library(here)
library(gganimate)
gapminder_mortes %>%
mutate(year = as.integer(year)) %>%
ggplot() +
aes(gdpPercap, death_rate_100thousand_age_standardized, size = pop, colour = country) +
geom_point(alpha = 0.7, show.legend = FALSE) +
scale_size(range = c(5, 5)) +
scale_x_continuous(trans = "log10",
labels = scales::unit_format(unit = "k",
scale = 1e-3)) +
theme_few() +
scale_colour_manual(values = country_colors) +
facet_wrap(~continent) +
# Animação
labs(title = "Mortes por tuberculose",
subtitle = 'Ano: {frame_time}',
x = 'PIB per capita',
y = 'Mortes por 100 mil habitantes') +
transition_time(year) +
ease_aes('linear')
gapminder_mortes %>%
filter(year <= 2007,
death_disease == "Tuberculosis") %>%
ggpairs(columns = c("year",
"lifeExp",
"pop",
"gdpPercap",
"death_rate_100thousand_age_standardized"),
columnLabels = c("Ano",
"Expectativa de vida",
"População",
"PIB per capita",
"Mortes/100k Hab."),
mapping = aes(color = continent, alpha = 0.5)) +
theme_linedraw() +
theme(panel.grid.major = element_blank())+
labs(title = "Tuberculose",
subtitle = "Variáveis demográficas e mortalidade") +
scale_color_jama() +
scale_fill_jama()
library(GGally)
gapminder_mortes %>%
filter(year <= 2007,
death_disease == "Tuberculosis") %>%
ggpairs(columns = c("year",
"lifeExp",
"pop",
"gdpPercap",
"death_rate_100thousand_age_standardized"),
columnLabels = c("Ano",
"Expectativa de vida",
"População",
"PIB per capita",
"Mortes/100k Hab."),
mapping = aes(color = continent, alpha = 0.5)) +
theme_linedraw() +
theme(panel.grid.major = element_blank())+
labs(title = "Tuberculose",
subtitle = "Variáveis demográficas e mortalidade") +
scale_color_jama() +
scale_fill_jama()
library(GGally)
gapminder_mortes %>%
filter(year <= 2007,
death_disease == "Tuberculosis") %>%
ggpairs(columns = c("year",
"lifeExp",
"pop",
"gdpPercap",
"death_rate_100thousand_age_standardized"),
columnLabels = c("Ano",
"Expectativa de vida",
"População",
"PIB per capita",
"Mortes/100k Hab."),
mapping = aes(color = continent, alpha = 0.5)) +
theme_linedraw() +
theme(panel.grid.major = element_blank())+
labs(title = "Tuberculose",
subtitle = "Variáveis demográficas e mortalidade") +
scale_color_jama() +
scale_fill_jama()
options(repos = c(CRAN = "https://cran.r-project.org"))
# Baixar pacotes do CRAN para a biblioteca
# install.packages("tidyverse")
# install.packages("skimr")
# install.packages("janitor")
# install.packages("esquisse")
# install.packages("ggthemes")
# install.packages("plotly")
# install.packages("gghighlight")
# install.packages("patchwork")
# install.packages("ggsci")
# install.packages("gapminder")
# install.packages("ggpmisc")
# install.packages("gganimate")
# Chamando os pacotes da biblioteca
library(tidyverse) #Metapacote
library(skimr) #Diagnóstico de tabela
library(janitor) #Limpeza de tabelas
library(esquisse) #Plotagem de gráficos prática
library(ggthemes) #Temas de ggplot
library(plotly) #Gráficos interativos
library(patchwork) #Unir gráficos
library(gghighlight) #Marcar pontos e linhas
library(ggsci) #Paleta de cores
library(gapminder) #Dataset sobre população, PIB e expectativa de vida dos países
library(ggpmisc)
library(scales)
library(here)
library(gganimate)
library(GGally)
#Operações básicas -----
#Variáveis numéricas
x = 5
x
y = 7
y
z = y + x
z
multiplicacão = x * y
multiplicacão
multiplicacão
multiplicacão = x * y
multiplicacão
multiplicacão
multi = x * y
multi
multi = x * y
multi
#Operações básicas -----
#Variáveis numéricas
x = 5
x
y = 7
y
z = y + x
z
multi = x * y
multi
# Variáveis textuais (characters, string)
a = "Olá" #Uma palavra
a
b = "Tudo bem?" #Uma frase
# Variáveis textuais (characters, string)
a = "Olá" #Uma palavra
a
b = "Tudo bem?" #Uma frase
b = "Tudo bem?" #Uma frase
b
# Comparações lógicas (booleanas)
a == b #Igual?
a != b #Diferente?
x < y # Menor?
x > y # Maior?
x <= 5 # Menor ou igual?
aa = "Olá"
aa == a
aa = "Olá"
aa == a
options(repos = c(CRAN = "https://cran.r-project.org"))
# Baixar pacotes do CRAN para a biblioteca
# install.packages("tidyverse")
# install.packages("skimr")
# install.packages("janitor")
# install.packages("esquisse")
# install.packages("ggthemes")
# install.packages("plotly")
# install.packages("gghighlight")
# install.packages("patchwork")
# install.packages("ggsci")
# install.packages("gapminder")
# install.packages("ggpmisc")
# install.packages("gganimate")
# Chamando os pacotes da biblioteca
library(tidyverse) #Metapacote
library(skimr) #Diagnóstico de tabela
library(janitor) #Limpeza de tabelas
library(esquisse) #Plotagem de gráficos prática
library(ggthemes) #Temas de ggplot
library(plotly) #Gráficos interativos
library(patchwork) #Unir gráficos
library(gghighlight) #Marcar pontos e linhas
library(ggsci) #Paleta de cores
library(gapminder) #Dataset sobre população, PIB e expectativa de vida dos países
library(ggpmisc)
library(scales)
library(here)
library(gganimate)
library(GGally)
#Operações básicas -----
#Variáveis numéricas
x = 5
x
y = 7
y
z = y + x
z
multi = x * y
multi
# Variáveis textuais (characters, string)
a = "Olá" #Uma palavra
a
b = "Tudo bem?" #Uma frase
gapminder_mortes %>%
mutate(year = as.integer(year)) %>%
ggplot() +
aes(gdpPercap, death_rate_100thousand_age_standardized, colour = country) +
geom_point(alpha = 0.7, show.legend = FALSE, mapping = aes(size = pop)) +
scale_size(range = c(5, 5)) +
scale_x_continuous(trans = "log10",
labels = scales::unit_format(unit = "k",
scale = 1e-3)) +
theme_few() +
scale_colour_manual(values = country_colors) +
facet_wrap(~continent) +
# Animação
labs(title = "Mortes por tuberculose",
subtitle = 'Ano: {frame_time}',
x = 'PIB per capita',
y = 'Mortes por 100 mil habitantes') +
transition_time(year) +
ease_aes('linear')
